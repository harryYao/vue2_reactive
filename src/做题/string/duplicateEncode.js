// 📖 题目4：重复编码器
// 本练习的目的是将字符串转换为新字符串，
// 其中新字符串中的每个字符是"("该字符在原始字符串中仅出现一次，还是")"该字符在原始字符串中出现多次。
// 确定字符是否重复时忽略大写。
// 例子
// "din"      =>  "((("
// "recede"   =>  "()()()"
// "Success"  =>  ")())())"
// "(( @"     =>  "))((" 

// 解题
function duplicateEncode(word){
  word.toLowerCase().split('').map((a, i, w) => {
    return w.indexOf(a) == w.lastIndexOf(a) ? '(': ')'
  }).join('')
}
// 技巧在于2点
// 1. map的第三个参数为数组本身
// 2. 这个判断 indexOf == lastIndexOf

// 一行简写
const duplicateEncode2 = (s) => s.toLowerCase().split('').map((a, i, w) => w.indexOf(a) === w.lastIndexOf(a) ? '(': ')').join('');

const duplicateEncode3 = (word) => {
  const map = new Map();
  word = word.toLowerCase();
  const result = new Array(word.length);
  let i = 0;
  while (i < word.length) {
    if (map.get(word[i])) {
      map.get(word[i]).push(i)
    } else {
      map.set(word[i], [i])
    }
    i++
  }
  map.forEach((item, key) => {
    item.forEach(index => result[index] = item.length > 1 ? '1': '0')
  })
  return result.join('');
}

// test
var testStr = `1、简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。
2、灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。
3.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。
4.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。
5、支持B/S及C/S模式。
阳历VS公历很久很久以前，世界上的古人过日子，总得知道日子过到哪里了呀。什么时候播种，自己活了多久，盖房子要盖多长时间，等等。想象一下，没有年月日的情况下，
"时间”是一种什么“时间感”。后来人们慢慢慢慢地，在自然观察中，寻找“时间的节奏”。一些聪明人发现了某些规律。什么规律呢？看太阳。太阳一年变化是非常有规律的。
世界各地的聪明人都能看到太阳，于是以太阳运行周期特点为依据，创立了各种太阳历。但是，聪明人的聪明各有特色，于是这些太阳历也不尽相同……总之，其中一种（格里历），
在漫长的实践应用与历史的机缘巧合中，逐步干掉了其它太阳历，经过演变，成为了现行的世界通用的历法——它有一个人尽皆知的名字：“公历”！反正其它太阳历都被干掉了，
所以现在说到“阳历”，基本也就是指咱们国际统一通行的“公历”。2.阳历VS阴历话说，天上除了太阳，还有月亮啊。月亮阴晴圆缺的规律更明显，不比看太阳省眼。总之，除了太阳，
还有群爱观察月亮的人。他们以月亮的变化为依据，创立了各自的“月亮历”（lunar calendar），很多最古老的历法都是月亮历。这种以月亮为基础的历法，叫啥呢？太阳的叫太阳历，
那月亮的就叫太阴历吧，也就是“阴历”的来源。鉴于“阴历”在不同语境中，容易和“农历”混淆，我们就用“月亮历”这个可爱的称呼来继续下文吧。完全过月亮历，也有些问题——靠月亮的话，
一个月是按29天半算的，12个月354天左右。每年这样少几天的话，积少成多……总之也有点儿乱。历法嘛，不断在追求精确…不够就靠“闰”来添，即使现在的公历，也有闰年。但完全靠月亮，
这差得也有点儿忒多了，一年差十天，十年一百天，三十年就快一年？？？要知道春夏秋冬可是主要靠太阳的……当然，有对此无所谓的，比如伊斯兰历就完全月亮历，新年时而在春天，时而在夏天，
随便。3. 阴历VS农历很久很久以前，中国有观察太阳的聪明人，有观察月亮的聪明人，搞出来过太阳历也搞出来过月亮历。经过长期的发展，中国的主流传统历法也就是大家熟悉的农历，
它是阴阳合历。阴阳历的意思是，它不是靠太阳，也不是靠月亮，而是很智慧的一种方式：用基于太阳的阳历来确定年，用基于月相变化的阴历来确定月和日。毕竟，作为农业大国，太阳变化对农业生产的指导也很重要。
而对老百姓来说，日常还是抬头看月亮算日期更方便……初一看不见月亮，十五的月亮十六圆，多显而易见。靠太阳的话，一年大概365点几天，靠月亮的话，每年大概354点几天。那差的天数咋办呢？
总之经过一批聪明人的计算，强行“闰”了回去。再具体点儿，大概就是十九年七闰——在19年中插入7个闰月。具体咋算的就不用深究了，反正历史上也是一批超级聪明的人负责这超级复杂的计算，
剩下的人（像我这样的）直接看历就行了。话说，你打开手机看，2020年是不是有两个农历四月。说到这里，想想等到闰正月的时候……能过两次春节假期？！！！可惜我活不到那时候了，如果那时候知乎还在，
看到这里的人请给我点赞告慰。PS，我觉得如果日常说说的情况下，不必深究阴历和农历有啥区别，毕竟现在日历上除了公历，剩下的就一个东西了，例如，我姥姥才不管什么太阳月亮的呢，想说阴历说阴历，
想说农历说农历。
中文互联网社区经历了BBS、SNS等不同阶段，2010年前后兴起的移动互联网对论坛模式的社区冲击甚大，面向PC互联网的论坛架构不论是在内容创作、组织、分享还是消费上，都很难适应移动时代，各大论坛逐渐走向没落。2012年，曾捧红奶茶妹妹与芙蓉姐姐的猫扑从北京迁移到广西南宁，2016年网易论坛停服，论坛式中文社区时代终结。
论坛已成往事，中文社区却生机勃勃，借助移动互联网焕发出新的生命力，知乎、快手与B站等生于移动时代的社区悄然崛起，在各自领域扎下根来，一直红到今天。知乎、快手与B站分别在知识问答、短视频与长视频领域占据关键位置，它们均诞生在2010年前后：B站上线于2009年、知乎上线于2010、快手成立于2011年，它们成功摆脱“社区十年必衰”的魔咒，成为今天依然活跃的三大头部中文社区，可称之为中文社区三兄弟。
巧合的是，今年快手与知乎先后在港股与美股上市，与此前已经上市的B站在二级资本市场聚首，成为股市的“中文社区三兄弟”。回头看，2010年到2020年三大中文社区生机勃勃，有两大原因不容忽视：
一个是智能手机、4G网络与移动支付等基础设施普及，让人们创作、分享与消费内容更容易，极大促进了社区繁荣。传统论坛创作内容就是“发帖”，往往会让人联想到“打开电脑码字”这样的场景，换言之创作门槛相对高，内容形式单一，互动也很简单，只能满足人们的部分内容需求。
移动时代的社区则可兼容不同形态内容，短内容、图文、视频、直播与问答等等，平台负责搭建内容生产环境，组织内容生产，将内容“结构化”分发给用户消费，人们也可以便捷地在社区互动，如点赞、回帖、分享、赞赏、礼物、私信。这一过程，知乎将问答与知识结构化，B站与快手将视频结构化，结构化的结果就是“标准化”，标准化的结果就是高效率生产、大规模消费、系统化变现，进而成为大的产业。
另一个则是自媒体浪潮的出现。自媒体是跟共享经济（共享出行等）一起出现的潮流，互联网解放每个人的创造力，让人人均可在互联网平台创作获取读者/观众/粉丝。越来越多创作者将自媒体当成副业、职业甚至事业。这里说的自媒体是指广义自媒体，可能是知乎上的答主，可能是B站的UP主，可能是快手的网红。对于内容社区来说，它们则不再需要雇佣大规模的创作员工，只需要制定规则，通过运营手段，即可让社区形成源源不断的内容供给，内容更丰富，且成本大幅降低。`;

let now = new Date().getTime();
var r1 = duplicateEncode2(testStr);
console.log('lastIndex方法 消耗时间：', new Date().getTime() - now);
now = new Date().getTime();
var r2 = duplicateEncode3(testStr);
console.log('map 方法 消耗时间：', new Date().getTime() - now);

// lastIndex方法 消耗时间： 13
// map 方法 消耗时间： 1